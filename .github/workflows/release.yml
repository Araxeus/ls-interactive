name: Release

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  release:
    name: release ${{ matrix.make.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust: [stable]
        include:
          - os: macos-latest
            filename: macos
          - os: ubuntu-latest
            filename: linux
          - os: windows-latest
            filename: windows

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --release --verbose

      - name: Release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/lsi.exe

      - name: Get tar name (Unix)
        if: matrix.os != 'windows-latest'
        id: tar_name
        run: echo ::set-output name=NAME::"lsi_${GITHUB_REF#refs/tags/}_${{ matrix.filename }}.tar.gz"

      - name: Tar (Unix)
        if: matrix.os != 'windows-latest'
        run: tar cvzf ${{ steps.tar_name.outputs.NAME }} "target/release/lsi"

      - name: Release (Unix)
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.tar_name.outputs.NAME }}
